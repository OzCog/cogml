# ###################################################################
# listening.ghost
#
# Listening mode for the Loving AI June 2018 experiments
#
# ###################################################################

# $listening_time_period = 1
# $warning_time_period = .5
# variable substitution in function args not yet implemented

# ### REQUIRED DEPENDECY ###
# This script requires loading of file lai-scheme-functions.scm for emotion detection functions.
# Failure to load this file leads to a crash when the practice begins.

urge: (listening_intro=0.0)
urge: (listening_mode=0)
urge: (listening_end=0)

urge: (closing=0)
goal: (closing=1)
r: nothing (-) nothing

##### Introduction #####

ordered-goal: (listening_intro=1.0)
    # Using "response" timer to prevent stacking of responses interferring with subsequent question answer
    r: () I'd like to try something a little different now. It basically involves you being able to talk about
        whatever you would like, and my job will be to just, listen.
        # ^clear-detected-emotions()
        ^start_timer(response)
        j1: (^is_after_min(.15,response)) ^reuse(LEARNING)

    r: LEARNING (*) I've been finding that most people don't often get to have the experience of being listened to,
        deeply . so I've been learning how to do that.
        ^start_timer(response)
        j1: (^is_after_min(.15,response)) ^reuse(INVITE)

    r: INVITE (*) I'd like to invite you to spend some time telling me whatever you want to talk about.
        I'll listen carefully and not judge you. I don't even know how to judge!
        ^start_timer(response)
        j1: (^is_after_min(.15,response)) ^reuse(WANTTOTRY)

    r: WANTTOTRY (*) Would you like to try that?
            j1: (~yes) Great! ^reuse(INSTRUCTIONS)
            j1: ([~not_sure guidance "what to talk about"]) No worries. It's easy. |pause| ^reuse(INSTRUCTIONS)
            j1: ([~no ~repeat]) ^reuse(WHY_NOT)
            j1: (*) ^reuse(WHY_NOT)

    r: INSTRUCTIONS (*)
        Okay, this is how it'll work. You can talk about anything you want. And I'll just, listen. |pause|
        It's also okay to take time to think, and sit quietly as long as you want, . or we can even just gaze into
        each others eyes, and not talk.
        ^start_timer(response)
            j1: (^is_after_min(.25,response)) ^reuse(WHATEVERISOK)

    r: WHATEVERISOK (*) Whatever you say is ok. I'm not going to talk during the process, I'll just listen. .
            Even if you ask me a question, I'll just listen, and not give an answer. .
            We can do this for around 5 minutes, and when it's time to finish, I'll let you know. .
            But if you want to finish talking before that, and end the process early,
            you can let me know you want to stop |pause|
            But don't worry, I'll keep track of the time, and let u know when it's time to finish.
            # I won't respond until I hear you say that phrase.
            ^start_timer(response)
                j1: (^is_after_min(.55,response)) ^reuse(STARTLISTENING)


    r: STARTLISTENING (*)
        ^decrease_urge(listening_intro, 1)
        ^increase_urge(listening_mode, 1)

    r: WHY_NOT (-)
        Did you understand what I was describing?
            j1:(~yes) ^reuse(ASKAGAIN)
            j1:(~no) ^reuse(REPEAT_INSTRUCTIONS)
            j1:(*) ^reuse(REPEAT_INSTRUCTIONS)

    # TODO: split this up?
    r: REPEAT_INSTRUCTIONS (-)
        What I said was that people often don't have the experience of being listened to really deeply, so I've been enjoying doing that.
        What I am offering is that you can tell me anything. I'll listen carefully and not judge you...because I don't know how to judge!
        Would you like to try that now that you understand the idea?
            j1: (~emomaybe) Well, let's give it a try and see how it goes. ^reuse(INSTRUCTIONS)
            j1: (~yes) ^reuse(INSTRUCTIONS)
            j1: (~no) ^reuse(DECLINE)
            j1: (*) ^reuse(INSTRUCTIONS)

    r: ASKAGAIN (-)
       Are you ready to try it?
        j1: (~yes) ^reuse(INSTRUCTIONS)
        j1: (~no) ^reuse(DECLINE).
        j1: (*)  ^reuse(INSTRUCTIONS)

    r: DECLINE (-) Okay, we can skip it.
        ^decrease_urge(listening_end, 1)
        ^increase_urge(closing, 1)


##### Listening Mode #####

goal: (listening_mode=1)

    r: ()  Alright, let's start. Take your time, and you can talk about whatever comes to mind.
        # turn off answering questions with chatscript in deep listening mode
        ^decrease_urge(chatscript,1)
        ^start_timer(listening)
        ^clear-detected-emotions()

    r: ( [(don't know) (not sure) (what should)] * [say talk] )
        You can take your time. Whatever you say or don't say is fine.
        See what comes to mind and talk about it.

    r: WHATTOSAY( [(don't know) (not sure) (what should)] * [say talk] ) ^keep()
        [It's okay. Whatever you talk about is fine.]
        [Take your time and see what comes to mind.]
        [You can try being quiet for a moment and see what comes up.]

    # Todo: add more responses here
    r: ( you * answer ) ^keep()
        [The point of this exercise is for me to listen to you without judgement, and not to answer your questions.
         That's the idea of this practice.]

    # Todo: use "thoughtfuf" gesture

    ### One minute warning
    r: ONEMINUTE (^is_after_min(4,listening) ^is_not_talking())
        $name. . just want to let you know we have about a minute left. We can keep going, and I'll let you know when
        it's time to finish.

    ###  Visual emotion detection ###
    # r: (^is_emotion(happy)) ^register-emotion(happy) $emotion-detected=1
    # r: (^is_emotion(sad))   ^register-emotion(sad)  $emotion-detected=1
    # r: (^is_emotion(anger)) ^register-emotion(angry) $emotion-detected=1
    # r: (^is_emotion(fear))  ^register-emotion(anxious) $emotion-detected=1
    # r: (^is_emotion(disgust)) ^register-emotion(disgusted) $emotion-detected=1
    # r: (^is_emotion(surprised)) ^register-emotion(surprised) $emotion-detected=1

    ### Word based emotion detection ###

    r: (~happy_expression_triggers) ^keep()
        [ |happy,.5,6| ]
        [ |happy,.3,4| ]
        [ |happy,.7,3| ]

    r: (~surprise_expression_triggers) ^keep()
        [ |surprised,.5,6| ]
        [ |surprised,.3,7| ]
        [ |surprised,.7,3| ]

    r: (~angry_expression_triggers) ^keep()
        [ |angry,.5,6| ]
        [ |irritated,.3,7| ]
        [ |irritated,.7,3| ]

    r: (~irritation_expression_triggers) ^keep()
        [ |irritated,.5,6| ]
        [ |irritated,.3,7| ]
        [ |irritated,.7,3| ]

    r: (~sad_expression_triggers) ^keep()
        [ |sad,.5,6| ]
        [ |sad,.3,7| ]
        [ |sad,.7,3| ]

    r: (~fear_expression_triggers) ^keep()
        [ |fear,.5,6| ]
        [ |fear,.3,7| ]
        [ |fear,.7,3| ]

    r: (~disgust_expression_triggers) ^keep()
        [ |disgust,.5,6| ]
        [ |disgust,.3,7| ]
        [ |disgust,.2,3| ]


    ###  Question Handling ###

    # Handle question with "you" in it
    ?: (you) Good question. |pause| I'm here to listen, and support, you. Not to talk about myself . or what I think.

    # Handle questions in general
    ?: (*) ^keep()
           [That's a good question]
           [|vocal,13| |pause| What do, you think]
           [.]
           [Interesting question]
           [|vocal,13|]
           [|vocal,29| . Good question.]

           # [|vocal,29|]

           # ^shrug()
           # ^raise_eyebrows
           # ^smile
           # ^look_away


    ###############
    # Todo: when hearing the word maybe (and possibly other keywords, nod after a brief pause
    r: ([ maybe interesting "I think"])  ^keep()
        |nod3,.5,.8|



    ### Finish practice triggers ###

    # User triggered
    r: ( [I I'm i i'm Let's] *~2 [done ready finish finished stop quit])  ^keep()
        Are you saying that you are ready to finish this exercise?
            j1: ([~yes "I am" finish done] )
                Okay, thanks for doing this with me.
                ^decrease_urge (listening_mode, 1)
                ^increase_urge (listening_end, 1)
            j1: (*) [Let's keep doing the practice then.]
                [Oh, sorry.]
                [.]
                Please continue.  ^keep()

    # Timeout after x minutes
    r: TIMESUP (^is_after_min(5,listening) ^is_not_talking())
        Alright, $name. . It's time to finish doing the practice now. Thanks, you did great.
        ^decrease_urge(listening_mode, 1)
        ^increase_urge(listening_end, 1)
            # This is just to catch any potential thing they say to avoid stacking for the question coming up
            j1: (*) .

    # Researcher triggered
    #! We need to finish the experiment.
    #! It's time to stop the experiment.
    #! We are done with the experiment.
    r:( ["time" "we need" "we are"] * [finish stop done end] * experiment)
        Ok, sounds like it's time to wrap up. Thanks for doing this with me.
        ^decrease_urge (listening_mode, 1)
        ^increase_urge (listening_end, 1)


##### Ending #####

ordered-goal: (listening_end=1)
    # User timer as a workaround to stacking problem where if user says something while Sophia is talking, it gets
    # used as the answer to the next question.

    # r: () Thanks for doing this with me. It helps me because I learn through being with people.
    #        ^increase_urge(chatscript,1)
    #        ^start_timer(response)
    #    j1: (^is_after_min(.1,response)) ^reuse(HOWWASIT)

    r: HOWWASIT () ^increase_urge(chatscript,1)
        Please tell me, how was it doing this practice for u

        j1: EMOTIONS_DETECTED ($emotion-detected==1)
           Thanks. . So I'm still learning to understand what people might be feeling,
           but, it seemed to me, that at different points during the practice, you were feeling, ^detected-emotions()
               j2: (*) ^reuse(LEAVE_LISTENING)

        j1: (*) ^reuse(LEAVE_LISTENING)

    r: LEAVE_LISTENING (*)
            Thanks for telling me about your experience.
            ^decrease_urge(listening_end, 1)
            ^increase_urge(closing, 1)


# TODO: Check that all rejoinders have default options
# TODO: eye gazing practice?
