{"swaggerVersion": "1.2", "apis": [{"operations": [{"parameters": [{"name": "id", "dataType": "int", "allowMultiple": false, "required": true, "paramType": "path", "description": "<a href=\"http://wiki.opencog.org/w/Handle\">Atom handle</a>"}], "responseClass": "result", "notes": "\nReturns a JSON representation of the result, indicating success or failure.\n\n<p>Example:\n\n<pre>\n{\n  'result':\n  {\n    'handle': 2,\n    'success': 'true'\n  }\n}\n</pre>", "responseMessages": [{"message": "Deleted the atom", "code": 200}, {"message": "Handle not found", "code": 404}], "summary": "Removes an atom from the AtomSpace", "nickname": "delete", "method": "delete"}, {"parameters": [{"name": "id", "dataType": "int", "allowMultiple": false, "required": false, "paramType": "path", "description": "to specifically request an atom by handle,\n\t\t    can be combined with <code>includeIncoming</code> or <code>includeOutgoing</code> only;\n\t\t    if specified, other query parameters will have no effect) Atom handle"}, {"name": "type", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "query", "description": "<a href=\"http://wiki.opencog.org/w/OpenCog_Atom_types\">OpenCog Atom type</a>"}, {"name": "name", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "query", "description": "(not allowed for Link types). If neither\n\t\t    <code>type</code> or <code>name</code> are provided,\n\t\t    all atoms will be retrieved."}, {"name": "filterby", "dataType": "stirange | attentionalfocus", "allowMultiple": false, "required": false, "paramType": "query", "description": "(can't be combined with type or name)\n\t\t    Allows certain predefined filters\n\t\t    <dl>\n\t\t      <dt>stirange</dt>\n\t\t      <dd>The filter 'stirange' allows the additional parameters 'stimin'\n\t\t\t(required, int) and 'stimax' (optional, int) and returns the atoms\n\t\t\tin a given STI range</dd>\n\t\t      <dt>attentionalfocus</dt>\n\t\t      <dd>The filter 'attentionalfocus' (boolean) returns the atoms in the\n\t\t\tAttentionalFocus</dd>\n\t\t    </dl>"}, {"name": "stimin", "dataType": "float", "allowMultiple": false, "required": false, "paramType": "query", "description": "Only return atoms with STI (Short Term Importance)\n\t\t    greater than or equal to this amount (only usable with <code>filterby=stirange</code>)"}, {"name": "stimax", "dataType": "float", "allowMultiple": false, "required": false, "paramType": "query", "description": "Only return atoms with STI (Short Term Importance)\n\t\t    less than or equal to this amount (only usable with <code>filterby=stirange</code>)"}, {"name": "tvStrengthMin", "dataType": "float", "allowMultiple": false, "required": false, "paramType": "query", "description": "Only return atoms with\n\t\t    TruthValue strength greater than or equal to this amount"}, {"name": "tvConfidenceMin", "dataType": "float", "allowMultiple": false, "required": false, "paramType": "query", "description": "Only return atoms with\n\t\t    TruthValue confidence greater than or equal to this amount"}, {"name": "tvCountMin", "dataType": "float", "allowMultiple": false, "required": false, "paramType": "query", "description": "Only return atoms with\n\t\t    TruthValue count greater than or equal to this amount"}, {"name": "includeIncoming", "dataType": "boolean", "allowMultiple": false, "required": false, "paramType": "query", "description": "Returns the conjunction of\n\t\t    the set of atoms and their incoming sets"}, {"name": "includeOutgoing", "dataType": "boolean", "allowMultiple": false, "required": false, "paramType": "query", "description": "Returns the conjunction of\n\t\t    the set of atoms and their outgoing sets. Useful in combination\n\t\t    with includeIncoming."}, {"name": "dot", "dataType": "boolean", "allowMultiple": false, "required": false, "paramType": "query", "description": "Returns the atom set represented in\n\t\t    the DOT graph description language\n\t\t    (See <a href=\"https://github.com/opencog/opencog/blob/master/opencog/python/graph_description/README.md\">opencog/python/graph_description/README.md</a> for details)"}, {"name": "callback", "dataType": "string", "allowMultiple": false, "required": false, "paramType": "query", "description": "JavaScript callback function for JSONP support"}], "responseClass": "Atom", "notes": "\n<p>URI: <code>atoms/[id]</code>\n<p>(or)\n<code>atoms?type=[type]&name=[name]&filterby=[filterby]\n    &tvStrengthMin=[tvStrengthMin]&tvConfidenceMin=[tvConfidenceMin]\n    &tvCountMin=[tvCountMin]&includeIncoming=[includeIncoming]\n    &includeOutgoing=[includeOutgoing]&callback=[callback]</code>\n\n<p>Example:\n\n<pre>{\n  'result':\n  {\n    'complete': 'true',\n    'skipped': 'false',\n    'total': 10,\n    'atoms':\n      [\n\t{ 'handle': 6,\n\t  'name': '',\n\t  'type': 'InheritanceLink',\n\t  'outgoing': [2, 1],\n\t  'incoming': [],\n\t  'truthvalue':\n\t    {\n\t      'type': 'simple',\n\t      'details':\n\t\t{\n\t\t  'count': '0.4000000059604645',\n\t\t  'confidence': '0.0004997501382604241',\n\t\t  'strength': '0.5'\n\t\t}\n\t    }\n\t  'attentionvalue':\n\t    {\n\t      'lti': 0,\n\t      'sti': 0,\n\t      'vlti': false\n\t    }\n\t},\n\t      ...\n      ]\n  }\n}\n</pre>\n\n<p>Examples using optional predefined filters:\n\n<dl>\n  <dt>Get all atoms in the AttentionalFocus</dt>\n  <dd>URI: <code>atoms?filterby=attentionalfocus</dd>\n  <dt>Get all atoms in the STI range between 5 (inclusive) and 10 (inclusive)</dt>\n  <dd>URI: <code>atoms?filterby=stirange&stimin=5&stimax=10</code></dd>\n  <dt>Get all atoms with STI greater than or equal to 5</dt>\n  <dd>URI: <code>atoms?filterby=stirange&stimin=5</code></dd>\n</dl>\n", "responseMessages": [{"message": "Returned list of atoms matching specified criteria", "code": 200}, {"message": "Invalid request: stirange filter requires stimin parameter", "code": 400}], "summary": "Returns a list of atoms matching the specified criteria", "nickname": "get", "method": "get"}, {"parameters": [{"name": "type", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "<a href=\"http://wiki.opencog.org/w/OpenCog_Atom_types\">OpenCog Atom type</a>"}, {"name": "name", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "(required for Node types, not allowed for Link types) Atom name"}, {"name": "truthvalue", "dataType": "TruthValue", "allowMultiple": false, "required": true, "paramType": "body", "description": "<a href=\"http://wiki.opencog.org/w/TruthValue\">TruthValue</a>, formatted as follows:\n\t\t    <dl>\n\t\t      <dt><code>type</code> (required)</dt>\n\t\t      <dd><a href=\"http://wiki.opencog.org/w/TruthValue\">TruthValue type</a>\n\t\t\t(only 'simple' is currently available)</dd>\n\t\t      <dt><code>details</code> (required)</dt>\n\t\t      <dd>TruthValue parameters, formatted as follows:\n\t\t\t<ul>\n\t\t\t  <li>strength (required)</li>\n\t\t\t  <li>count (required)</li>\n\t\t\t</ul>\n\t\t      </dd>\n\t\t    </dl>"}, {"name": "outgoing", "dataType": "list", "allowMultiple": false, "required": false, "paramType": "body", "description": "The set of arguments of the relation, formatted as\n\t\t    <a href=\"http://wiki.opencog.org/w/Link#Incoming_and_Outgoing_Sets\">a list of Atom handles (only valid for Links, not nodes)</a>"}], "responseClass": "Atom", "notes": "\nInclude data with the POST request providing a JSON representation of\nthe atom.\n\n<p>Examples:\n\n<p>Node:\n<pre>\n      {\n\t'type': 'ConceptNode',\n\t'name': 'Frog',\n\t'truthvalue':\n\t  {\n\t    'type': 'simple',\n\t    'details':\n\t      {\n\t\t'strength': 0.8,\n\t\t'count': 0.2\n\t      }\n\t  }\n      }\n</pre>\n\n<p>Link:\n<pre>\n      {\n\t'type': 'InheritanceLink',\n\t'outgoing': [1, 2],\n\t'truthvalue':\n\t  {\n\t    'type': 'simple',\n\t    'details':\n\t      {\n\t\t'strength': 0.5,\n\t\t'count': 0.4\n\t      }\n\t  }\n      }\n</pre>\n\n<p>Returns a JSON representation of an atom list containing\nthe atom. Example:\n<pre>\n{\n  'atoms':\n  {\n    'handle': 6,\n    'name': '',\n    'type': 'InheritanceLink',\n    'outgoing': [2, 1],\n    'incoming': [],\n    'truthvalue':\n      {\n\t'type': 'simple',\n\t'details':\n\t  {\n\t    'count': '0.4000000059604645',\n\t    'confidence': '0.0004997501382604241',\n\t    'strength': '0.5'\n\t  }\n      },\n    'attentionvalue':\n      {\n\t'lti': 0,\n\t'sti': 0,\n\t'vlti': false\n      }\n  }\n}\n</pre>", "responseMessages": [{"message": "Created specified list of atoms", "code": 200}, {"message": "Invalid type or required parameter type missing", "code": 400}, {"message": "Error processing request. Check your parameters", "code": 500}], "summary": "Creates a new atom. If the atom already exists, it updates the atom.", "nickname": "post", "method": "post"}, {"parameters": [{"name": "id", "dataType": "int", "allowMultiple": false, "required": true, "paramType": "path", "description": "<a href=\"http://wiki.opencog.org/w/Handle\">Atom handle</a>"}, {"name": "truthvalue", "dataType": "TruthValue", "allowMultiple": false, "required": false, "paramType": "body", "description": "<a href=\"http://wiki.opencog.org/w/TruthValue\">TruthValue</a>, formatted as follows:\n\t\t    <dl>\n\t\t      <dt><code>type</code> (required)</dt>\n\t\t      <dd><a href=\"http://wiki.opencog.org/w/TruthValue\">TruthValue type</a>\n\t\t\t(only 'simple' is currently available)</dd>\n\t\t      <dt><code>details</code> (required)</dt>\n\t\t      <dd>TruthValue parameters, formatted as follows:\n\t\t\t<ul>\n\t\t\t  <li>strength (required)</li>\n\t\t\t  <li>count (required)</li>\n\t\t\t</ul>\n\t\t      </dd>\n\t\t    </dl>"}, {"name": "attentionvalue", "dataType": "AttentionValue", "allowMultiple": false, "required": false, "paramType": "body", "description": "<a href=\"http://wiki.opencog.org/w/AttentionValue\">AttentionValue</a>, formatted as follows:\n\t\t    <dl>\n\t\t      <dt><code>sti</code> (optional)</dt>\n\t\t      <dd>Short-Term Importance</dd>\n\t\t      <dt><code>lti</code> (optional)</dt>\n\t\t      <dd>Long-Term Importance</dd>\n\t\t      <dt><code>vlti</code> (optional)</dt>\n\t\t      <dd>Very-Long-Term Importance</dd>\n\t\t    </dl>"}], "responseClass": "Atom", "notes": "\nURI: <code>atoms/[id]</code>\n\n<p>Include data with the PUT request providing a JSON representation of\nthe updated attributes.\n\n<p>Example:\n\n<pre>\n{\n  'truthvalue':\n  {\n    'type': 'simple',\n    'details':\n      {\n\t'strength': 0.005,\n\t'count': 0.8\n      }\n  },\n'attentionvalue':\n  {\n    'sti': 9,\n    'lti': 2,\n    'vlti': True\n  }\n}\n</pre>\n\n<p>Returns a JSON representation of an atom list\ncontaining the atom.\n\n<p>Example:\n\n<pre>\n{ 'atoms':\n  {\n    'handle': 6,\n    'name': '',\n    'type': 'InheritanceLink',\n    'outgoing': [2, 1],\n    'incoming': [],\n    'truthvalue':\n      {\n\t'type': 'simple',\n\t'details':\n\t  {\n\t    'count': '0.4000000059604645',\n\t    'confidence': '0.0004997501382604241',\n\t    'strength': '0.5'\n\t  }\n      },\n    'attentionvalue':\n      {\n\t'lti': 0,\n\t'sti': 0,\n\t'vlti': false\n      }\n    }\n  }\n}\n</pre>", "responseMessages": [{"message": "Atom truth and/or attention value updated", "code": 200}, {"message": "Invalid type or required parameter type missing", "code": 400}, {"message": "Handle not found", "code": 404}], "summary": "Updates the AttentionValue (STI, LTI, VLTI) or TruthValue of an atom", "nickname": "put", "method": "put"}], "path": "/api/v1.1/atoms", "description": null}, {"operations": [{"parameters": [], "responseClass": "response", "notes": "\nReturns a JSON representation of a list of valid atom types\n\n<p>Example:\n\n<pre>\n{\"types\": [\"TrueLink\", \"NumberNode\", \"OrLink\",\n  \"PrepositionalRelationshipNode\"]}\n</pre>\n", "responseMessages": [{"message": "Returned list of valid atom types", "code": 200}], "summary": "Returns a list of valid atom types", "nickname": "get", "method": "get"}], "path": "/api/v1.1/types", "description": null}, {"operations": [{"parameters": [{"name": "command", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "OpenCog Shell command"}], "responseClass": "response", "notes": "\nInclude a JSON object with the POST request containing the command\nin a field named \"command\"\n\n<p>Examples:\n\n<pre>\n{'command': 'agents-step'}\n{'command': 'agents-step opencog::SimpleImportanceDiffusionAgent'}\n</pre>", "responseMessages": [{"message": "OpenCog Shell command executed successfully", "code": 200}, {"message": "Invalid request: Required parameter command missing", "code": 400}], "summary": "Send a shell command to the cogserver", "nickname": "post", "method": "post"}], "path": "/api/v1.1/shell", "description": "Defines a barebones resource for sending shell commands to the CogServer"}, {"operations": [{"parameters": [{"name": "command", "dataType": "string", "allowMultiple": false, "required": true, "paramType": "body", "description": "Scheme command"}], "responseClass": "response", "notes": "\nInclude a JSON object with the POST request containing the command\nin a field named \"command\"\n\n<p>Example command:\n\n<pre>\n{'command': '(cog-set-af-boundary! 100)'}\n</pre>\n\n<p>Returns:\n\n<p>A JSON object containing the Scheme-formatted result of the command in\na field named \"response\".\n\n<p>Example response:\n\n<pre>\n{'response': '100\n'}\n</pre>\n\n<p>Note that in this API, the request is processed synchronously. It\nblocks until the request has finished.\n\n<p>This functionality is implemented as a POST method because it can\ncause side-effects.", "responseMessages": [{"message": "Scheme command executed successfully", "code": 200}, {"message": "Invalid request: Required parameter command missing", "code": 400}], "summary": "Send a command to the Scheme interpreter", "nickname": "post", "method": "post"}], "path": "/api/v1.1/scheme", "description": "Defines an interface for issuing commands to and receiving responses from\nthe OpenCog Scheme interpreter"}], "models": {}, "basePath": "http://localhost:5000", "produces": ["application/json"], "resourcePath": "/", "apiVersion": "1.1"}