# .github/workflows/ci-org-v3.yml

name: CI Org v3

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  CCACHE_DIR: /ws/ccache
  MAKEFLAGS: -j2

jobs:
  build-and-test:
    name: Build and Test CogUtil and AtomSpace
    runs-on: ubuntu-latest
    container:
      image: opencog/opencog-deps
      options: --user root
      env:
        CCACHE_DIR: /ws/ccache
        MAKEFLAGS: -j2

    services:
      opencog-postgres:
        image: opencog/postgres
        env:
          POSTGRES_USER: opencog_test
          POSTGRES_PASSWORD: cheese
          POSTGRES_DB: atomspace_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # 1. Checkout the Repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Configure Git Safe Directory
#      - name: Configure Git Safe Directory
#        run: git config --global --add safe.directory /__w/opencog-central/opencog-central

      # 3. Install Dependencies
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ccache pkg-config cmake build-essential

      # 4. Build and Install CogUtil
      - name: Build and Install CogUtil
        run: |
          mkdir -p cogutil/build
          cd cogutil/build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make
          sudo make install
          sudo ldconfig

      # 5. Verify CogUtil Installation
#      - name: Verify CogUtil Installation
#        run: |
#          pkg-config --cflags cogutil || { echo "CogUtil not found in pkg-config"; exit 1; }
#          pkg-config --libs cogutil || { echo "CogUtil libraries not found"; exit 1; }

      # 6. Build and Install AtomSpace
      - name: Build and Install AtomSpace
        run: |
          mkdir -p atomspace/build
          cd atomspace/build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH=/usr/local ..
          make
          sudo make install
          sudo ldconfig

      # 7. Run AtomSpace Tests
      - name: Run AtomSpace Tests
        run: |
          cd atomspace/build
          make tests
          make check ARGS="$MAKEFLAGS"

      # 8. Print AtomSpace Test Log
      - name: Print AtomSpace Test Log
        if: always()
        run: |
          cat atomspace/build/tests/Testing/Temporary/LastTest.log || echo "Test log not found."

      # 9. (Optional) Package Artifacts
      - name: Package AtomSpace
        if: github.ref == 'refs/heads/main'
        run: |
          cd atomspace/build
          make package || echo "Package target not defined."

      # 10. (Optional) Upload Test Logs or Packages
      - name: Upload Test Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: |
            atomspace/build/tests/Testing/Temporary/LastTest.log

      - name: Upload Packages
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: atomspace-packages
          path: atomspace/build/packages/ || echo "No packages to upload."
